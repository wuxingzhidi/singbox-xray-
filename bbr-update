#!/bin/bash

# 极限暴力版 BBR 和 TCP 优化脚本
# 警告：这些设置极其激进，可能不适合生产环境，仅供测试和研究使用

# 检查是否为 root 用户
if [ "$(id -u)" != "0" ]; then
    echo "此脚本需要 root 权限运行！"
    exit 1
fi

# 颜色定义
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # 无颜色

# 日志函数
log_info() {
    echo -e "${GREEN}[INFO] $1${NC}"
}

log_warning() {
    echo -e "${YELLOW}[WARNING] $1${NC}"
}

log_error() {
    echo -e "${RED}[ERROR] $1${NC}"
}

log_extreme() {
    echo -e "${PURPLE}[EXTREME] $1${NC}"
}

# 检查当前内核是否支持 BBR
check_bbr_support() {
    if ! grep -q "tcp_bbr" /proc/modules; then
        log_warning "当前内核可能不支持 BBR，请确保使用 4.9+ 内核"
        read -p "是否继续? (y/N): " confirm
        if [ "$confirm" != "y" ] && [ "$confirm" != "Y" ]; then
            exit 1
        fi
    fi
}

# 备份原有 sysctl 配置
backup_sysctl() {
    if [ -f /etc/sysctl.conf ]; then
        cp /etc/sysctl.conf /etc/sysctl.conf.bak.$(date +%Y%m%d%H%M%S)
        log_info "已备份原有 sysctl 配置"
    fi
}

# 移除现有重复配置
remove_duplicate_config() {
    local config_file="/etc/sysctl.conf"
    local temp_file=$(mktemp)
    
    # 创建不包含我们将要设置的参数的新配置文件
    grep -vE "^(net\.(ipv4|core)\..*|fs\..*)" "$config_file" > "$temp_file"
    
    # 使用临时文件替换原文件
    mv "$temp_file" "$config_file"
    log_info "已清理所有网络相关 sysctl 配置"
}

# 启用 BBR
enable_bbr() {
    log_extreme "启用 BBR 拥塞控制算法..."
    sysctl -w net.ipv4.tcp_congestion_control=bbr

    # 确保 BBR 模块已加载
    log_extreme "加载 BBR 模块..."
    modprobe tcp_bbr
}

# 极限 TCP 参数优化
optimize_tcp_extreme() {
    log_extreme "极限优化 TCP 参数..."
    
    # 根据系统内存动态调整 TCP 内存参数
    local total_mem_kb=$(grep MemTotal /proc/meminfo | awk '{print $2}')
    local total_mem_mb=$((total_mem_kb / 1024))
    
    # 极限内存分配 (使用高达 90% 的系统内存)
    local tcp_mem_min=$((total_mem_kb / 2))
    local tcp_mem_pressure=$((total_mem_kb * 3 / 4))
    local tcp_mem_max=$((total_mem_kb * 9 / 10))
    
    # 极限缓冲区设置
    sysctl -w net.ipv4.tcp_rmem="4096 87380 67108864"      # 最大接收缓冲区增加到 64MB
    sysctl -w net.ipv4.tcp_wmem="4096 65536 67108864"      # 最大发送缓冲区增加到 64MB
    sysctl -w net.ipv4.tcp_mem="$tcp_mem_min $tcp_mem_pressure $tcp_mem_max"
    
    # 极限连接和队列优化
    sysctl -w net.ipv4.tcp_max_syn_backlog=65536          # 极大增加 SYN 队列
    sysctl -w net.core.somaxconn=262144                   # 极大增加最大连接数
    sysctl -w net.ipv4.tcp_syncookies=0                   # 禁用 syncookies (极端性能)
    sysctl -w net.ipv4.tcp_window_scaling=1               # 启用 TCP 窗口扩大
    sysctl -w net.ipv4.tcp_mtu_probing=1                  # 开启 MTU 自动探测
    sysctl -w net.ipv4.tcp_rfc1337=1                      # 修复 TIME-WAIT 状态问题
    sysctl -w net.ipv4.tcp_max_tw_buckets=1800000         # 极大增加 TIME-WAIT 状态桶数
    sysctl -w net.ipv4.tcp_fin_timeout=7                  # 极短 FIN 等待超时
    sysctl -w net.core.netdev_max_backlog=500000          # 极大增加网络设备接收队列
    sysctl -w net.core.rmem_max=67108864                  # 极大增加最大接收缓冲区
    sysctl -w net.core.wmem_max=67108864                  # 极大增加最大发送缓冲区
    sysctl -w net.ipv4.tcp_max_orphans=262144             # 极大增加最大孤立连接数

    # 极限 TCP 拥塞控制
    log_extreme "极限优化 BBR 参数..."
    sysctl -w net.ipv4.tcp_low_latency=1                  # 降低延迟
    sysctl -w net.ipv4.tcp_ecn=2                          # 强制开启 ECN (极端)
    sysctl -w net.ipv4.tcp_no_metrics_save=1              # 禁用 TCP 性能存储
    sysctl -w net.ipv4.tcp_slow_start_after_idle=0        # 禁用空闲后慢启动
    sysctl -w net.ipv4.tcp_adv_win_scale=1                # 增加广告窗口缩放

    # 极限内核网络栈设置
    log_extreme "极限调优内核网络栈设置..."
    sysctl -w net.ipv4.tcp_retries1=2                     # 减少第一次重试次数
    sysctl -w net.ipv4.tcp_retries2=8                     # 增加重试次数
    sysctl -w net.ipv4.tcp_keepalive_time=180             # 缩短连接保持活动的时间
    sysctl -w net.ipv4.tcp_keepalive_probes=9             # 极大增加探测次数
    sysctl -w net.ipv4.tcp_keepalive_intvl=10             # 极短探测间隔

    # 文件描述符极限优化
    log_extreme "极大增加最大文件描述符数..."
    sysctl -w fs.file-max=4194304                         # 极大增加文件描述符限制
    sysctl -w fs.nr_open=4194304                          # 极大增加单个进程文件描述符限制
    
    # 极限本地端口范围
    sysctl -w net.ipv4.ip_local_port_range="1024 65000"   # 极大增加本地端口范围
    
    # 极限网络设备设置
    sysctl -w net.core.optmem_max=4194304                 # 极大增加套接字选项缓冲区大小
    sysctl -w net.core.netdev_budget=600                  # 增加网络设备处理数据包预算
    sysctl -w net.core.netdev_budget_usecs=6000           # 增加网络设备处理时间预算
    
    # 极限路由缓存
    sysctl -w net.ipv4.route.max_size=2147483647          # 极大增加路由缓存大小
    
    # 极限 ARP 缓存
    sysctl -w net.ipv4.neigh.default.gc_thresh1=1024      # 增加 ARP 缓存阈值
    sysctl -w net.ipv4.neigh.default.gc_thresh2=4096
    sysctl -w net.ipv4.neigh.default.gc_thresh3=8192
    
    # 极限 UDP 设置
    sysctl -w net.ipv4.udp_mem="$tcp_mem_min $tcp_mem_pressure $tcp_mem_max"  # UDP 内存使用与 TCP 相同
    
    # 禁用 IPv6 (极端性能优化，可选)
    read -p "是否禁用 IPv6 以获得极致性能? (y/N): " disable_ipv6
    if [ "$disable_ipv6" = "y" ] || [ "$disable_ipv6" = "Y" ]; then
        sysctl -w net.ipv6.conf.all.disable_ipv6=1
        sysctl -w net.ipv6.conf.default.disable_ipv6=1
        log_extreme "IPv6 已禁用"
    fi
}

# 保存极限配置到 sysctl.conf
save_extreme_config() {
    log_extreme "保存极限配置到 sysctl.conf..."
    
    # 移除现有重复配置
    remove_duplicate_config
    
    # 获取当前内存设置
    local total_mem_kb=$(grep MemTotal /proc/meminfo | awk '{print $2}')
    local tcp_mem_min=$((total_mem_kb / 2))
    local tcp_mem_pressure=$((total_mem_kb * 3 / 4))
    local tcp_mem_max=$((total_mem_kb * 9 / 10))
    
    # 添加极限配置
    cat >> /etc/sysctl.conf << EOF
# 极限 BBR 和 TCP 优化配置 - 添加于 $(date)
# 警告：这些设置极其激进，可能不适合生产环境

net.ipv4.tcp_congestion_control = bbr
net.ipv4.tcp_rmem = 4096 87380 67108864
net.ipv4.tcp_wmem = 4096 65536 67108864
net.ipv4.tcp_mem = $tcp_mem_min $tcp_mem_pressure $tcp_mem_max
net.ipv4.tcp_max_syn_backlog = 65536
net.core.somaxconn = 262144
net.ipv4.tcp_syncookies = 0
net.ipv4.tcp_window_scaling = 1
net.ipv4.tcp_mtu_probing = 1
net.ipv4.tcp_rfc1337 = 1
net.ipv4.tcp_max_tw_buckets = 1800000
net.ipv4.tcp_fin_timeout = 7
net.core.netdev_max_backlog = 500000
net.core.rmem_max = 67108864
net.core.wmem_max = 67108864
net.ipv4.tcp_max_orphans = 262144
net.ipv4.tcp_low_latency = 1
net.ipv4.tcp_ecn = 2
net.ipv4.tcp_no_metrics_save = 1
net.ipv4.tcp_slow_start_after_idle = 0
net.ipv4.tcp_adv_win_scale = 1
net.ipv4.tcp_retries1 = 2
net.ipv4.tcp_retries2 = 8
net.ipv4.tcp_keepalive_time = 180
net.ipv4.tcp_keepalive_probes = 9
net.ipv4.tcp_keepalive_intvl = 10
fs.file-max = 4194304
fs.nr_open = 4194304
net.ipv4.ip_local_port_range = 1024 65000
net.core.optmem_max = 4194304
net.core.netdev_budget = 600
net.core.netdev_budget_usecs = 6000
net.ipv4.route.max_size = 2147483647
net.ipv4.neigh.default.gc_thresh1 = 1024
net.ipv4.neigh.default.gc_thresh2 = 4096
net.ipv4.neigh.default.gc_thresh3 = 8192
net.ipv4.udp_mem = $tcp_mem_min $tcp_mem_pressure $tcp_mem_max
EOF

    log_extreme "极限配置已保存到 /etc/sysctl.conf"
}

# 应用配置
apply_config() {
    log_extreme "应用 sysctl 配置..."
    sysctl -p
    
    # 验证 BBR 是否启用
    if sysctl net.ipv4.tcp_congestion_control | grep -q bbr; then
        log_extreme "BBR 已成功启用"
    else
        log_error "BBR 启用失败，请检查内核支持"
    fi
}

# 显示当前优化状态
show_extreme_status() {
    log_extreme "当前极限优化状态:"
    echo -e "${CYAN}TCP 拥塞控制:${NC} $(sysctl net.ipv4.tcp_congestion_control | cut -d' ' -f3)"
    echo -e "${CYAN}BBR 模块状态:${NC} $(lsmod | grep -q tcp_bbr && echo "已加载" || echo "未加载")"
    echo -e "${CYAN}最大文件描述符:${NC} $(sysctl fs.file-max | cut -d' ' -f3)"
    echo -e "${CYAN}TCP 内存设置:${NC} $(sysctl net.ipv4.tcp_mem | cut -d' ' -f3-5)"
    echo -e "${CYAN}最大连接数:${NC} $(sysctl net.core.somaxconn | cut -d' ' -f3)"
    echo -e "${CYAN}SYN 队列大小:${NC} $(sysctl net.ipv4.tcp_max_syn_backlog | cut -d' ' -f3)"
    echo -e "${CYAN}TCP 接收缓冲区:${NC} $(sysctl net.ipv4.tcp_rmem | cut -d' ' -f3-5)"
    echo -e "${CYAN}TCP 发送缓冲区:${NC} $(sysctl net.ipv4.tcp_wmem | cut -d' ' -f3-5)"
}

# 增加系统资源限制
increase_limits() {
    log_extreme "增加系统资源限制..."
    
    # 备份原有配置
    if [ -f /etc/security/limits.conf ]; then
        cp /etc/security/limits.conf /etc/security/limits.conf.bak.$(date +%Y%m%d%H%M%S)
    fi
    
    # 添加极限资源限制
    cat >> /etc/security/limits.conf << EOF
# 极限资源限制 - 添加于 $(date)
* soft nofile 1048576
* hard nofile 1048576
* soft nproc 1048576
* hard nproc 1048576
* soft memlock unlimited
* hard memlock unlimited
root soft nofile 1048576
root hard nofile 1048576
root soft nproc 1048576
root hard nproc 1048576
root soft memlock unlimited
root hard memlock unlimited
EOF
    
    log_extreme "系统资源限制已增加到极限"
}

# 主函数
main() {
    echo -e "${PURPLE}"
    echo "=========================================================="
    echo "           极限暴力版 BBR 和 TCP 优化脚本"
    echo "  警告：这些设置极其激进，可能不适合生产环境！"
    echo "=========================================================="
    echo -e "${NC}"
    
    read -p "您确定要继续吗？这可能会影响系统稳定性！(y/N): " confirm
    if [ "$confirm" != "y" ] && [ "$confirm" != "Y" ]; then
        exit 0
    fi
    
    log_extreme "开始极限 BBR 和 TCP 暴力优化"
    
    # 检查 BBR 支持
    check_bbr_support
    
    # 备份原有配置
    backup_sysctl
    
    # 启用 BBR
    enable_bbr
    
    # 极限优化 TCP 参数
    optimize_tcp_extreme
    
    # 增加系统资源限制
    increase_limits
    
    # 保存配置
    save_extreme_config
    
    # 应用配置
    apply_config
    
    # 显示状态
    show_extreme_status
    
    log_extreme "极限 BBR 暴力参数优化完成！"
    log_warning "警告：这些是极其激进的优化设置！"
    log_warning "系统可能需要重启才能应用所有更改。"
    log_warning "请密切监控系统稳定性和内存使用情况。"
}

# 执行主函数
main "$@"
