#!/bin/bash

# 颜色定义
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# 显示菜单函数
show_menu() {
    clear
    echo -e "${GREEN}=========================================${NC}"
    echo -e "${GREEN}           系统优化脚本菜单${NC}"
    echo -e "${GREEN}=========================================${NC}"
    echo -e "${BLUE}1.${NC} 安装递归DNS (Unbound)"
    echo -e "${RED}2. 53端口清理 (谨慎使用!)${NC}"
    echo -e "${BLUE}3.${NC} BBR参数暴力调整"
    echo -e "${BLUE}4.${NC} BBR内核升级"
    echo -e "${PURPLE}5.${NC} 一键执行所有优化"
    echo -e "${BLUE}0.${NC} 退出脚本"
    echo -e "${GREEN}=========================================${NC}"
    echo -e "${YELLOW}提示: 红色选项为高风险操作，请谨慎使用!${NC}"
}

# 安装递归DNS
install_unbound_dns() {
    echo -e "${YELLOW}开始安装递归DNS (Unbound)...${NC}"
    bash <(curl -fsSL https://raw.githubusercontent.com/wuxingzhidi/ubound-dns-one-click-installation-script/main/dns-Unbound)
    
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}递归DNS安装完成!${NC}"
    else
        echo -e "${RED}递归DNS安装失败!${NC}"
    fi
    read -p "按回车键继续..."
}

# 清理53端口
clean_port_53() {
    echo -e "${RED}=========================================${NC}"
    echo -e "${RED}           警告: 高风险操作!${NC}"
    echo -e "${RED}=========================================${NC}"
    echo -e "${YELLOW}此操作将强制清理占用53端口的进程!${NC}"
    echo -e "${YELLOW}这可能会影响正在运行的DNS服务。${NC}"
    echo -e "${YELLOW}请确保你知道此操作的后果!${NC}"
    echo -e "${RED}=========================================${NC}"
    
    read -p "确定要继续吗? (输入 'YES' 确认): " confirm
    
    if [[ $confirm == "YES" ]]; then
        echo -e "${YELLOW}开始清理53端口...${NC}"
        bash <(curl -fsSL https://raw.githubusercontent.com/wuxingzhidi/ubound-dns-one-click-installation-script/main/kill-53)
        
        if [ $? -eq 0 ]; then
            echo -e "${GREEN}53端口清理完成!${NC}"
        else
            echo -e "${RED}53端口清理失败!${NC}"
        fi
    else
        echo -e "${YELLOW}已取消53端口清理操作。${NC}"
    fi
    read -p "按回车键继续..."
}

# 调整BBR参数
adjust_bbr() {
    echo -e "${YELLOW}开始调整BBR参数...${NC}"
    bash <(curl -fsSL https://raw.githubusercontent.com/wuxingzhidi/ubound-dns-one-click-installation-script/main/bbr-update)
    
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}BBR参数调整完成!${NC}"
    else
        echo -e "${RED}BBR参数调整失败!${NC}"
    fi
    read -p "按回车键继续..."
}

# BBR内核升级
upgrade_bbr_kernel() {
    echo -e "${YELLOW}开始BBR内核升级...${NC}"
    echo -e "${YELLOW}注意: 内核升级需要重启系统才能生效${NC}"
    
    bash <(curl -fsSL https://raw.githubusercontent.com/wuxingzhidi/ubound-dns-one-click-installation-script/main/bbr-core-update)
    
    if [ $? -eq 0 ]; then
        echo -e "${GREEN}BBR内核升级完成!${NC}"
        echo -e "${YELLOW}请重启系统使新内核生效: sudo reboot${NC}"
    else
        echo -e "${RED}BBR内核升级失败!${NC}"
    fi
    read -p "按回车键继续..."
}

# 一键执行所有优化
all_in_one() {
    echo -e "${YELLOW}开始一键执行所有优化...${NC}"
    echo -e "${PURPLE}注意: 此操作将按顺序执行所有优化项目${NC}"
    
    # 安装递归DNS
    echo -e "${BLUE}[1/4] 安装递归DNS...${NC}"
    install_unbound_dns
    echo
    
    # 清理53端口 (需要确认)
    echo -e "${RED}[2/4] 清理53端口...${NC}"
    clean_port_53
    echo
    
    # 调整BBR参数
    echo -e "${BLUE}[3/4] 调整BBR参数...${NC}"
    adjust_bbr
    echo
    
    # BBR内核升级
    echo -e "${BLUE}[4/4] BBR内核升级...${NC}"
    upgrade_bbr_kernel
    echo
    
    echo -e "${GREEN}所有优化操作完成!${NC}"
    echo -e "${YELLOW}请注意: 内核升级后需要重启系统才能生效${NC}"
    read -p "按回车键继续..."
}

# 检查curl是否安装
check_dependencies() {
    if ! command -v curl &> /dev/null; then
        echo -e "${RED}错误: 需要安装curl工具${NC}"
        echo "请运行以下命令安装:"
        echo "Ubuntu/Debian: sudo apt update && sudo apt install -y curl"
        echo "CentOS/RHEL: sudo yum install -y curl"
        exit 1
    fi
}

# 显示系统信息
show_system_info() {
    echo -e "${CYAN}系统信息:${NC}"
    echo -e "操作系统: $(lsb_release -d 2>/dev/null | cut -f2 || cat /etc/os-release | grep PRETTY_NAME | cut -d= -f2)"
    echo -e "内核版本: $(uname -r)"
    echo -e "当前时间: $(date)"
    echo ""
}

# 主函数
main() {
    # 检查依赖
    check_dependencies
    
    # 显示系统信息
    show_system_info
    
    while true; do
        show_menu
        read -p "请选择操作 (0-5): " choice
        
        case $choice in
            1)
                install_unbound_dns
                ;;
            2)
                clean_port_53
                ;;
            3)
                adjust_bbr
                ;;
            4)
                upgrade_bbr_kernel
                ;;
            5)
                all_in_one
                ;;
            0)
                echo -e "${GREEN}感谢使用，再见!${NC}"
                exit 0
                ;;
            *)
                echo -e "${RED}无效选择，请重新输入!${NC}"
                read -p "按回车键继续..."
                ;;
        esac
    done
}

# 脚本说明
echo -e "${GREEN}系统优化脚本 v2.0${NC}"
echo -e "${YELLOW}作者: 基于 wuxingzhidi 的脚本${NC}"
echo -e "${BLUE}功能说明:${NC}"
echo -e "1. 递归DNS安装 - 安装Unbound DNS解析器"
echo -e "${RED}2. 53端口清理 - 清理占用DNS端口的进程${NC}"
echo -e "3. BBR优化 - 调整TCP BBR参数提升网络性能"
echo -e "4. BBR内核升级 - 升级内核以获得更好的BBR支持"
echo ""

# 显示警告信息
echo -e "${RED}=========================================${NC}"
echo -e "${RED}               重要警告!${NC}"
echo -e "${RED}=========================================${NC}"
echo -e "${YELLOW}1. 53端口清理是高风险操作，可能影响系统稳定性${NC}"
echo -e "${YELLOW}2. 内核升级需要重启系统才能生效${NC}"
echo -e "${YELLOW}3. 建议在测试环境中先验证效果${NC}"
echo -e "${YELLOW}4. 生产环境使用前请做好备份${NC}"
echo -e "${RED}=========================================${NC}"
echo ""

read -p "是否继续? (输入 'continue' 确认): " start_confirm
if [[ $start_confirm == "continue" ]]; then
    main
else
    echo -e "${YELLOW}已取消执行。${NC}"
    exit 0
fi
